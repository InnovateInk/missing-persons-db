services:
  web:
    build:
      context: .
    container_name: missing_persons_django
    restart: unless-stopped
    volumes:
      - .:/code
      - ./deploy/gunicorn/logs:/deploy/gunicorn/logs
      - static:/code/static
      - media:/code/media
    networks:
      - internal
    depends_on:
      - postgres

  postgres:
    build: ./deploy/postgres
    container_name: missing_persons_db
    restart: unless-stopped
    expose:
      - "5432"
    ports:
      - "5432:5432"
    environment:
      - LC_ALL=${LC_ALL}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    networks:
      - internal
    volumes:
      - pgdata:/var/lib/postgresql/data/
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${DB_USER} -d ${DB_NAME} -h localhost -p 5432"
        ]
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    container_name: missing_persons_pg_admin
    networks:
      - internal
    depends_on:
      - postgres
    ports:
      - "5055:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:5055/login" ]
      interval: 30s
      timeout: 10s
      retries: 3

    restart: unless-stopped

  nginx:
    restart: always
    build: ./deploy/nginx
    container_name: missing_persons_web_server
    networks:
      - internal
    volumes:
      - ./deploy/nginx/:/etc/nginx/conf.d
      - ./deploy/nginx/logs/:/code/logs/nginx
      - static:/code/static
      - media:/code/media
    ports:
      - "127.0.0.1:8002:80"
    depends_on:
      - web
    links:
      - web
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost" ]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  internal:


volumes:
  pgdata:
  media:
  static:
